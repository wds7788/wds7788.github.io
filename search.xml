<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Github Pages 和 Hexo 搭建博客</title>
    <url>/2024/12/01/2Github%20PagesHexo/</url>
    <content><![CDATA[<h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><ol>
<li>访问：<a href="https://github.com/new">https://github.com/new</a></li>
<li>创建仓库，名称写 <code>xxx.github.io</code>。</li>
</ol>
<hr>
<h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><h3 id="1-下载安装-Git-环境"><a href="#1-下载安装-Git-环境" class="headerlink" title="1. 下载安装 Git 环境"></a>1. 下载安装 Git 环境</h3><p>设置 GitHub SSH Key。</p>
<h3 id="2-搭建-Node-js-环境"><a href="#2-搭建-Node-js-环境" class="headerlink" title="2. 搭建 Node.js 环境"></a>2. 搭建 Node.js 环境</h3><p>推荐使用 nvm：<a href="https://cloud.tencent.com/developer/article/1812323">文章链接</a>。</p>
<hr>
<h2 id="Hexo-的使用"><a href="#Hexo-的使用" class="headerlink" title="Hexo 的使用"></a>Hexo 的使用</h2><h3 id="1-安装-Hexo"><a href="#1-安装-Hexo" class="headerlink" title="1. 安装 Hexo"></a>1. 安装 Hexo</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p>如果进度条长时间没有变化,切换到淘宝 NPM 镜像：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmmirror.com</span><br></pre></td></tr></table></figure>

<h3 id="2-初始化-Hexo-框架"><a href="#2-初始化-Hexo-框架" class="headerlink" title="2. 初始化 Hexo 框架"></a>2. 初始化 Hexo 框架</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure>

<h3 id="3-安装相关依赖"><a href="#3-安装相关依赖" class="headerlink" title="3. 安装相关依赖"></a>3. 安装相关依赖</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure>

<h3 id="4-启动本地服务"><a href="#4-启动本地服务" class="headerlink" title="4. 启动本地服务"></a>4. 启动本地服务</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure>
<p>浏览器访问：<a href="http://localhost:4000/">localhost:4000</a>。</p>
<hr>
<h2 id="配置-Next-主题"><a href="#配置-Next-主题" class="headerlink" title="配置 Next 主题"></a>配置 Next 主题</h2><ol>
<li><p>进入上一步创建的 <code>blog</code> 文件夹，将 Next 主题相关文件从 GitHub 克隆到 <code>themes</code> 文件夹中：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置 Hexo 的主题参数：</p>
<ul>
<li>修改根目录的 <code>_config.yml</code> 文件中的 <code>theme</code> 参数为：<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>启动 Hexo 服务，验证 Next 主题是否启用。</p>
</li>
</ol>
<hr>
<h2 id="浏览器访问-localhost-4000-时出错"><a href="#浏览器访问-localhost-4000-时出错" class="headerlink" title="浏览器访问 localhost:4000 时出错"></a>浏览器访问 localhost:4000 时出错</h2><h3 id="错误内容"><a href="#错误内容" class="headerlink" title="错误内容"></a>错误内容</h3><p>浏览器显示内容如下所示：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% extends &#x27;_layout.swig&#x27; %&#125; &#123;% import &#x27;_macro/post.swig&#x27; as post_template %&#125; &#123;% import &#x27;_macro/sidebar.swig&#x27; as </span><br><span class="line">sidebar_template %&#125; &#123;% block title %&#125;&#123;&#123; config.title &#125;&#125;&#123;% if theme.index_with_subtitle and config.subtitle %&#125; - </span><br><span class="line">&#123;&#123;config.subtitle &#125;&#125;&#123;% endif %&#125;&#123;% endblock %&#125; &#123;%  block page_class %&#125; &#123;% if is_home() %&#125;page-home&#123;% endif -%&#125; &#123;% </span><br><span class="line">endblock %&#125; &#123;% block content %&#125; &#123;% for post in page.posts %&#125; &#123;&#123; post_template.render(post, true) &#125;&#125; &#123;% endfor %&#125; &#123;% </span><br><span class="line">include &#x27;_partials/pagination.swig&#x27; %&#125; &#123;% endblock %&#125; &#123;% block sidebar %&#125; &#123;&#123; sidebar_template.render(false) &#125;&#125; &#123;% </span><br><span class="line">endblock %&#125;</span><br></pre></td></tr></table></figure>

<h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>这是因为 Hexo 在 5.0 之后删除了 <code>swig</code>，需要自己手动安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i hexo-renderer-swig</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="添加博客内容"><a href="#添加博客内容" class="headerlink" title="添加博客内容"></a>添加博客内容</h2><ol>
<li>将写好的 Markdown 放到 <code>source/_posts</code> 目录。</li>
<li>将相应的图片放到 <code>source/images</code> 目录。</li>
<li>启动 Hexo 服务（如果之前没有关闭，请忽略此步骤）。</li>
<li>通过浏览器访问博客主页，可以发现更改已生效。</li>
</ol>
<hr>
<h2 id="将生成的静态页面部署到-GitHub-上"><a href="#将生成的静态页面部署到-GitHub-上" class="headerlink" title="将生成的静态页面部署到 GitHub 上"></a>将生成的静态页面部署到 GitHub 上</h2><h3 id="1-安装-deploy-git"><a href="#1-安装-deploy-git" class="headerlink" title="1. 安装 deploy-git"></a>1. 安装 <code>deploy-git</code></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<h3 id="2-修改站点配置文件-config-yml-的最后部分："><a href="#2-修改站点配置文件-config-yml-的最后部分：" class="headerlink" title="2. 修改站点配置文件 _config.yml 的最后部分："></a>2. 修改站点配置文件 <code>_config.yml</code> 的最后部分：</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/YourgithubName/YourgithubName.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">pages</span></span><br></pre></td></tr></table></figure>

<h3 id="3-部署博客"><a href="#3-部署博客" class="headerlink" title="3. 部署博客"></a>3. 部署博客</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean       <span class="comment"># 清除之前生成的内容</span></span><br><span class="line">hexo generate    <span class="comment"># 生成静态文章，缩写 hexo g</span></span><br><span class="line">hexo deploy      <span class="comment"># 部署文章，缩写 hexo d</span></span><br></pre></td></tr></table></figure>

<h3 id="4-设置GitHub-Pages"><a href="#4-设置GitHub-Pages" class="headerlink" title="4. 设置GitHub Pages"></a>4. 设置GitHub Pages</h3><p>在 GitHub 仓库Settings Pages Source 为 Deploy from a branch ，Branch选择pages分支，点击保存save</p>
<hr>
<p>现在，你可以在 <a href="http://xxx.github.io/">http://xxx.github.io</a> 看到你的博客了！</p>
]]></content>
  </entry>
  <entry>
    <title>API 接口签名验证机制</title>
    <url>/2025/05/24/API_interface_signature/</url>
    <content><![CDATA[<h2 id="✨-一、什么是-API-接口签名验证？"><a href="#✨-一、什么是-API-接口签名验证？" class="headerlink" title="✨ 一、什么是 API 接口签名验证？"></a>✨ 一、什么是 API 接口签名验证？</h2><p>API 签名是一种保障接口安全性的机制。其核心目的是：</p>
<ul>
<li>防篡改<strong>确保请求内容未被第三方修改</strong></li>
<li>防伪造<strong>验证请求来源合法性</strong></li>
<li>时效性<strong>防止历史请求重复提交</strong></li>
<li>完整性<strong>保证传输过程数据完整</strong></li>
</ul>
<p>签名的基本原理是：客户端将约定参数+请求体 + 密钥做加密签名，服务器根据相同逻辑重新生成签名进行比对，从而校验请求合法性。</p>
<hr>
<h2 id="📐-二、签名参数设计"><a href="#📐-二、签名参数设计" class="headerlink" title="📐 二、签名参数设计"></a>📐 二、签名参数设计</h2><p>一般包括以下几个字段：</p>
<table>
<thead>
<tr>
<th>参数名</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td><code>X-App-Id</code></td>
<td>应用标识（客户端ID）</td>
</tr>
<tr>
<td><code>X-Version</code></td>
<td>API版本号</td>
</tr>
<tr>
<td><code>X-Timestamp</code></td>
<td>请求时间戳（单位秒）</td>
</tr>
<tr>
<td><code>X-Nonce</code></td>
<td>随机字符串（防重放）</td>
</tr>
<tr>
<td><code>X-Signature</code></td>
<td>签名值（HMAC-SHA256生成）</td>
</tr>
</tbody></table>
<p>请求体（body）也会作为签名的一部分参与计算。</p>
<h3 id="签名生成步骤"><a href="#签名生成步骤" class="headerlink" title="签名生成步骤"></a>签名生成步骤</h3><ol>
<li><strong>参数收集</strong>: 收集所有参与签名的参数</li>
<li><strong>参数排序</strong>: 按参数名进行字典序排列</li>
<li><strong>字符串拼接</strong>: 按<code>key=value&amp;</code>格式拼接</li>
<li><strong>HMAC签名</strong>: 使用HMAC-SHA256算法计算签名</li>
</ol>
<h3 id="算法示例"><a href="#算法示例" class="headerlink" title="算法示例"></a>算法示例</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">原始参数：</span><br><span class="line">appid=appId</span><br><span class="line">version=1.0.0</span><br><span class="line">timestamp=1716456789</span><br><span class="line">nonce=abc123</span><br><span class="line">body=&#123;&quot;userId&quot;:123,&quot;action&quot;:&quot;testAction&quot;&#125;</span><br><span class="line">secretKey=secretKey</span><br><span class="line"></span><br><span class="line">注意：body如果为空就赋值&quot;&#123;&#125;&quot;,body=&#123;&#125;</span><br><span class="line"></span><br><span class="line">将请求体（如 JSON）序列化为字符串，忽略undefined、function等非法类型</span><br><span class="line"></span><br><span class="line">按参数名字母序排序（如appid→body→nonce→timestamp→version）</span><br><span class="line"></span><br><span class="line">生成签名字符串</span><br><span class="line"></span><br><span class="line">拼接为key1=value1&amp;key2=value2&amp;...格式</span><br><span class="line"></span><br><span class="line">排序后拼接：</span><br><span class="line">appid=appId&amp;body=&#123;&quot;userId&quot;:123,&quot;action&quot;:&quot;testAction&quot;&#125;&amp;nonce=abc123&amp;timestamp=1716456789&amp;version=1.0.0</span><br><span class="line"></span><br><span class="line">HMAC-SHA256签名：</span><br><span class="line">signature = HMAC-SHA256(拼接字符串, secretKey)</span><br><span class="line"></span><br><span class="line">signature示例: c8313008af78b064d700de24c5d15cee2ab6a14e6f506930656faa73668419f4</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="🔐-三、代码示例"><a href="#🔐-三、代码示例" class="headerlink" title="🔐 三、代码示例"></a>🔐 三、代码示例</h2><h3 id="前端加签逻辑（JavaScript）"><a href="#前端加签逻辑（JavaScript）" class="headerlink" title="前端加签逻辑（JavaScript）"></a>前端加签逻辑（JavaScript）</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>签名测试<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;sendRequest()&quot;</span>&gt;</span>发送请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> config = &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">appId</span>: <span class="string">&quot;appId&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">secretKey</span>: <span class="string">&quot;secretKey&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">version</span>: <span class="string">&quot;1.0.0&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">apiUrl</span>: <span class="string">&quot;https://wds7788.github.io/api/v1/test/test&quot;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">generateSignature</span>(<span class="params">config, data</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> timestamp = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Date</span>.<span class="title function_">now</span>() / <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> nonce = <span class="title function_">generateUniqueId</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 保持原始JSON顺序</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> bodyStr = data ? <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data, jsonSafeReplacer) : <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> signParams = &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">appid</span>: config.<span class="property">appId</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">version</span>: config.<span class="property">version</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">timestamp</span>: timestamp,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">nonce</span>: nonce,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">body</span>: bodyStr</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 调试输出（完成后可移除）</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;参与签名参数:&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(signParams, <span class="literal">null</span>, <span class="number">2</span>));</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> sortedParams = <span class="title class_">Object</span>.<span class="title function_">keys</span>(signParams)</span></span><br><span class="line"><span class="language-javascript">            .<span class="title function_">sort</span>()</span></span><br><span class="line"><span class="language-javascript">            .<span class="title function_">map</span>(<span class="function"><span class="params">key</span> =&gt;</span> <span class="string">`<span class="subst">$&#123;key&#125;</span>=<span class="subst">$&#123;signParams[key]&#125;</span>`</span>)</span></span><br><span class="line"><span class="language-javascript">            .<span class="title function_">join</span>(<span class="string">&#x27;&amp;&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 调试输出</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;签名字符串:&#x27;</span>, sortedParams);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> signature = <span class="title class_">CryptoJS</span>.<span class="title class_">HmacSHA256</span>(</span></span><br><span class="line"><span class="language-javascript">            sortedParams,</span></span><br><span class="line"><span class="language-javascript">            config.<span class="property">secretKey</span></span></span><br><span class="line"><span class="language-javascript">        ).<span class="title function_">toString</span>(<span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Hex</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;signature:&#x27;</span>, signature);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">headers</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="string">&#x27;X-App-Id&#x27;</span>: config.<span class="property">appId</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="string">&#x27;X-Version&#x27;</span>: config.<span class="property">version</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="string">&#x27;X-Timestamp&#x27;</span>: timestamp,</span></span><br><span class="line"><span class="language-javascript">                <span class="string">&#x27;X-Nonce&#x27;</span>: nonce,</span></span><br><span class="line"><span class="language-javascript">                <span class="string">&#x27;X-Signature&#x27;</span>: signature</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">body</span>: bodyStr</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">generateUniqueId</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> length = <span class="number">12</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> characters = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> result = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> charactersLength = characters.<span class="property">length</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">            result += characters.<span class="title function_">charAt</span>(<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * charactersLength));</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> result;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">jsonSafeReplacer</span>(<span class="params">key, value</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (<span class="keyword">typeof</span> value === <span class="string">&#x27;bigint&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> value.<span class="title function_">toString</span>(); <span class="comment">// BigInt 转为字符串</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (<span class="keyword">typeof</span> value === <span class="string">&#x27;symbol&#x27;</span> || <span class="keyword">typeof</span> value === <span class="string">&#x27;function&#x27;</span> || <span class="keyword">typeof</span> value === <span class="string">&#x27;undefined&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> <span class="literal">undefined</span>; <span class="comment">// 忽略 Symbol、Function、undefined</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> value;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">sendRequest</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> requestData = &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">userId</span>: <span class="number">123</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">action</span>: <span class="string">&#x27;testAction&#x27;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> &#123;headers, body&#125; = <span class="title function_">generateSignature</span>(config, requestData);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 调试输出</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;最终请求头:&#x27;</span>, headers);</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;请求体:&#x27;</span>, body);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> response = <span class="keyword">await</span> axios.<span class="title function_">post</span>(config.<span class="property">apiUrl</span>, body, &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">headers</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    ...headers,</span></span><br><span class="line"><span class="language-javascript">                    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;请求成功:&#x27;</span>, response.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125; <span class="keyword">catch</span> (error) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;请求失败:&#x27;</span>, error);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">sendRequest</span>();</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<hr>
<h3 id="后端验签逻辑（PHP）"><a href="#后端验签逻辑（PHP）" class="headerlink" title="后端验签逻辑（PHP）"></a>后端验签逻辑（PHP）</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by PhpStorm.</span></span><br><span class="line"><span class="comment"> * User: wds</span></span><br><span class="line"><span class="comment"> * Date: 2025/5/23</span></span><br><span class="line"><span class="comment"> * Time: 16:33</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">utils</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Signature</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$expireTime</span> = <span class="number">600</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$appId</span>      = <span class="string">&quot;appId&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$secretKey</span>  = <span class="string">&quot;secretKey&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$success</span>    = <span class="number">200</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$error</span>      = <span class="number">400</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//检验sign是否正确</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">verifySign</span>(<span class="params"><span class="keyword">array</span> <span class="variable">$header</span>, <span class="keyword">string</span> <span class="variable">$body</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 获取请求头参数</span></span><br><span class="line">        <span class="variable">$appid</span>     = <span class="variable">$header</span>[<span class="string">&#x27;X-App-Id&#x27;</span>] ?? <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="variable">$version</span>   = <span class="variable">$header</span>[<span class="string">&#x27;X-Version&#x27;</span>] ?? <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="variable">$nonce</span>     = <span class="variable">$header</span>[<span class="string">&#x27;X-Nonce&#x27;</span>] ?? <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="variable">$timestamp</span> = <span class="variable">$header</span>[<span class="string">&#x27;X-Timestamp&#x27;</span>] ?? <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$signature</span> = <span class="variable">$header</span>[<span class="string">&#x27;X-Signature&#x27;</span>] ?? <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 基础验证</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable">$appid</span> || !<span class="variable">$version</span> || !<span class="variable">$nonce</span> || !<span class="variable">$timestamp</span> || !<span class="variable">$signature</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> [<span class="string">&#x27;code&#x27;</span> =&gt; <span class="variable language_">$this</span>-&gt;error, <span class="string">&#x27;msg&#x27;</span> =&gt; <span class="string">&#x27;Missing authentication headers&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 应用ID有效性验证</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$appid</span> !== <span class="variable language_">$this</span>-&gt;appId) &#123;</span><br><span class="line">            <span class="keyword">return</span> [<span class="string">&#x27;code&#x27;</span> =&gt; <span class="variable language_">$this</span>-&gt;error, <span class="string">&#x27;msg&#x27;</span> =&gt; <span class="string">&#x27;Invalid appid&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 时间有效性验证</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">time</span>() - <span class="variable">$timestamp</span> &gt; <span class="variable language_">$this</span>-&gt;expireTime) &#123;</span><br><span class="line">            <span class="keyword">return</span> [<span class="string">&#x27;code&#x27;</span> =&gt; <span class="variable language_">$this</span>-&gt;error, <span class="string">&#x27;msg&#x27;</span> =&gt; <span class="string">&#x27;Request expired&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Nonce防重放</span></span><br><span class="line">        <span class="comment">// if (Cache::has(&#x27;api_nonce:&#x27;.$nonce)) &#123;</span></span><br><span class="line">        <span class="comment">//     throw new \Exception(&#x27;Duplicate request&#x27;, 401);</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="comment">//Cache::set(&#x27;api_nonce:&#x27;.$nonce, 1, $this-&gt;expireTime);</span></span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$body</span>)) &#123;</span><br><span class="line">            <span class="variable">$body</span> = <span class="string">&quot;&#123;&#125;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成服务端签名</span></span><br><span class="line">        <span class="variable">$serverSign</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">generateSign</span>([</span><br><span class="line">            <span class="string">&#x27;appid&#x27;</span>     =&gt; <span class="variable">$appid</span>,</span><br><span class="line">            <span class="string">&#x27;version&#x27;</span>   =&gt; <span class="variable">$version</span>,</span><br><span class="line">            <span class="string">&#x27;timestamp&#x27;</span> =&gt; <span class="variable">$timestamp</span>,</span><br><span class="line">            <span class="string">&#x27;nonce&#x27;</span>     =&gt; <span class="variable">$nonce</span>,</span><br><span class="line">            <span class="string">&#x27;body&#x27;</span>      =&gt; <span class="variable">$body</span> // 请求体</span><br><span class="line">        ]);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 签名比对</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">hash_equals</span>(<span class="variable">$serverSign</span>, <span class="variable">$signature</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> [<span class="string">&#x27;code&#x27;</span> =&gt; <span class="variable language_">$this</span>-&gt;error, <span class="string">&#x27;msg&#x27;</span> =&gt; <span class="string">&#x27;Invalid signature&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> [<span class="string">&#x27;code&#x27;</span> =&gt; <span class="variable language_">$this</span>-&gt;success, <span class="string">&#x27;msg&#x27;</span> =&gt; <span class="string">&#x27;success&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">generateSign</span>(<span class="params"><span class="keyword">array</span> <span class="variable">$params</span></span>): <span class="title">string</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 参数排序</span></span><br><span class="line">        <span class="title function_ invoke__">ksort</span>(<span class="variable">$params</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 拼接字符串</span></span><br><span class="line">        <span class="variable">$signStr</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$params</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">            <span class="variable">$signStr</span> .= <span class="string">&quot;<span class="subst">&#123;$key&#125;</span>=<span class="subst">&#123;$value&#125;</span>&amp;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$signStr</span> = <span class="title function_ invoke__">rtrim</span>(<span class="variable">$signStr</span>, <span class="string">&#x27;&amp;&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用HMAC-SHA256</span></span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">hash_hmac</span>(<span class="string">&#x27;sha256&#x27;</span>, <span class="variable">$signStr</span>, <span class="variable">$this</span>-&gt;secretKey);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>手动编译安装Swoole扩展</title>
    <url>/2025/04/20/install_swoole_extension/</url>
    <content><![CDATA[<h3 id="swoole-curl-setopt-option-10100-is-not-supported解决"><a href="#swoole-curl-setopt-option-10100-is-not-supported解决" class="headerlink" title="swoole_curl_setopt(): option[10100] is not supported解决"></a>swoole_curl_setopt(): option[10100] is not supported解决</h3><h3 id="安装-Swoole-扩展并启用-CURL-支持"><a href="#安装-Swoole-扩展并启用-CURL-支持" class="headerlink" title="安装 Swoole 扩展并启用 CURL 支持"></a>安装 Swoole 扩展并启用 CURL 支持</h3><p>在宝塔面板中，PHP 通常位于 <code>/www/server/php/你的PHP版本/bin</code> 目录下，例如 <code>/www/server/php/82/bin/phpize</code>。你需要根据你安装的 PHP 版本调整命令。</p>
<h4 id="1-下载-Swoole-源码"><a href="#1-下载-Swoole-源码" class="headerlink" title="1. 下载 Swoole 源码"></a>1. <strong>下载 Swoole 源码</strong></h4><p>从 <a href="https://github.com/swoole/swoole-src/releases">Swoole GitHub</a> 下载最新的源码包。选择 <code>Source code(tar.gz)</code> 格式的文件进行下载。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com/swoole/swoole-src/archive/refs/tags/v6.0.2.tar.gz</span><br></pre></td></tr></table></figure>

<h4 id="2-解压源码包"><a href="#2-解压源码包" class="headerlink" title="2. 解压源码包"></a>2. <strong>解压源码包</strong></h4><p>假设你已经下载了 <code>swoole-src-6.0.2.tar.gz</code> 文件，首先进入 PHP 安装目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /www/server/php/82</span><br></pre></td></tr></table></figure>

<p>然后解压下载的 Swoole 源码包：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf swoole-src-6.0.2.tar.gz</span><br></pre></td></tr></table></figure>

<h4 id="3-进入源码目录"><a href="#3-进入源码目录" class="headerlink" title="3. 进入源码目录"></a>3. <strong>进入源码目录</strong></h4><p>解压后，进入 Swoole 源码目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> swoole-src-6.0.2</span><br></pre></td></tr></table></figure>

<h4 id="4-执行-phpize"><a href="#4-执行-phpize" class="headerlink" title="4. 执行 phpize"></a>4. <strong>执行 phpize</strong></h4><p>在编译 Swoole 扩展之前，需要先执行 <code>phpize</code> 命令来准备 PHP 扩展的编译环境。<code>phpize</code> 是 PHP 提供的一个工具，用于准备 PHP 扩展的编译过程，生成必要的配置文件。执行命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/www/server/php/82/bin/phpize</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>原理</strong>：<code>phpize</code>是PHP扩展开发工具，作用是将Swoole源码转换为PHP可识别的扩展模块。需使用对应PHP版本的phpize，否则会出现ABI版本不匹配错误。<code>phpize</code> 会检测当前的 PHP 环境并生成一个 <code>configure</code> 脚本，使得 Swoole 能够与 PHP 正常兼容。</p>
</blockquote>
<h4 id="5-配置编译选项"><a href="#5-配置编译选项" class="headerlink" title="5. 配置编译选项"></a>5. <strong>配置编译选项</strong></h4><p>执行 <code>configure</code> 命令时，加入 <code>--enable-swoole-curl</code> 参数来启用原生的 CURL 支持。并通过 <code>--with-php-config</code> 指定 PHP 配置工具的路径。执行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./configure --enable-swoole-curl --enable-openssl --with-php-config=/www/server/php/82/bin/php-config</span><br><span class="line">  make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>原理</strong>：<code>--enable-swoole-curl</code> 参数启用了 Swoole 扩展中的 CURL 支持，<code>--with-php-config</code> 则指定了 PHP 配置工具的路径，确保编译过程中 PHP 的正确配置,通过configure脚本生成Makefile，参数决定扩展功能和依赖库绑定方式。使用系统CURL可避免自研实现的兼容性问题。</p>
</blockquote>
<h4 id="6-编译和安装"><a href="#6-编译和安装" class="headerlink" title="6. 编译和安装"></a>6. <strong>编译和安装</strong></h4><p>完成配置后，执行 <code>make</code> 和 <code>make install</code> 命令来编译并安装 Swoole 扩展：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>原理</strong>：<code>make</code> 会编译 Swoole 扩展，<code>make install</code> 会将编译好的扩展安装到 PHP 扩展目录中。如果编译顺利，你会看到类似以下的输出，表示安装成功。</p>
</blockquote>
<p>如果编译时提示缺少 OpenSSL 开发库，需要先安装：</p>
<p>CentOS&#x2F;RHEL:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install openssl-devel</span><br></pre></td></tr></table></figure>

<p>Ubuntu&#x2F;Debian:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install libssl-dev</span><br></pre></td></tr></table></figure>

<p>在 <code>/www/server/php/82/lib/php/extensions/no-debug-non-zts-20220829</code> 目录下，你会看到 <code>swoole.so</code> 文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /www/server/php/82/lib/php/extensions/no-debug-non-zts-20220829</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fileinfo.so  igbinary.so  opcache.so  redis.so  swoole.so  zip.so</span><br></pre></td></tr></table></figure>

<h4 id="7-修改-PHP-配置文件"><a href="#7-修改-PHP-配置文件" class="headerlink" title="7. 修改 PHP 配置文件"></a>7. <strong>修改 PHP 配置文件</strong></h4><p>在 PHP 配置文件中加载 Swoole 扩展。编辑 PHP 8.2 的 <code>php.ini</code> 文件，通常位于 <code>/www/server/php/82/etc/php.ini</code>，添加以下内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">extension=swoole.so</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>原理</strong>：这行配置指示 PHP 加载 <code>swoole.so</code> 扩展，以便 Swoole 扩展能够在 PHP 中生效。</p>
</blockquote>
<h4 id="8-重启-PHP-服务"><a href="#8-重启-PHP-服务" class="headerlink" title="8. 重启 PHP 服务"></a>8. <strong>重启 PHP 服务</strong></h4><p>修改完 <code>php.ini</code> 文件后，重启 PHP 服务以应用更改：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service php-fpm restart</span><br></pre></td></tr></table></figure>

<p>或者通过宝塔面板重启 PHP 服务。</p>
<h4 id="9-验证安装"><a href="#9-验证安装" class="headerlink" title="9. 验证安装"></a>9. <strong>验证安装</strong></h4><p>执行以下命令来确认 Swoole 是否安装成功：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">php -m | grep swoole</span><br></pre></td></tr></table></figure>
<p>如果输出 <code>swoole</code>，说明安装成功。</p>
<p>验证是否成功启用 OpenSSL：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">php --ri swoole | grep openssl</span><br></pre></td></tr></table></figure>

<p>应该能看到 openssl support &#x3D;&gt; enabled 的输出。</p>
<hr>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>通过上述步骤，你就能成功地编译并安装带有 CURL 支持的 Swoole 扩展。重要的是，确保在 <code>configure</code> 命令中添加了 <code>--enable-swoole-curl</code> 参数，这样可以启用原生 CURL 支持。编译过程中，<code>phpize</code> 和 <code>php-config</code> 工具的使用非常关键，它们帮助你确保扩展能够正确编译并与 PHP 配置兼容。</p>
<p>如遇到编译错误，请检查系统是否已安装 PHP 开发包和相关依赖库。</p>
]]></content>
  </entry>
  <entry>
    <title>ThinkPHP 8.1 + think-swoole 4.1 的 WebSocket 实时通信</title>
    <url>/2025/06/06/tp8_think_swoole_websock/</url>
    <content><![CDATA[<hr>
<h1 id="🌐-使用-Swoole-开启-WebSocket-服务（含连接-消息-断开监听）"><a href="#🌐-使用-Swoole-开启-WebSocket-服务（含连接-消息-断开监听）" class="headerlink" title="🌐 使用 Swoole 开启 WebSocket 服务（含连接&#x2F;消息&#x2F;断开监听）"></a>🌐 使用 Swoole 开启 WebSocket 服务（含连接&#x2F;消息&#x2F;断开监听）</h1><p>本文将通过一个完整的示例，介绍如何基于 Swoole 和 ThinkPHP 8 配置 WebSocket 服务，包含服务启动、连接事件监听、消息处理、断开处理及前端示例，适合初学者快速上手。</p>
<p>框架：thinkphp:8.1.1</p>
<p>扩展：think-swoole:4.1</p>
<hr>
<h2 id="📦-一、Swoole-配置文件（支持-WebSocket）"><a href="#📦-一、Swoole-配置文件（支持-WebSocket）" class="headerlink" title="📦 一、Swoole 配置文件（支持 WebSocket）"></a>📦 一、Swoole 配置文件（支持 WebSocket）</h2><p>创建或修改你的 <code>config/swoole.php</code> 配置文件：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> [</span><br><span class="line">    <span class="string">&#x27;http&#x27;</span> =&gt; [</span><br><span class="line">        <span class="string">&#x27;enable&#x27;</span>     =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;host&#x27;</span>       =&gt; <span class="string">&#x27;0.0.0.0&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;port&#x27;</span>       =&gt; <span class="number">9501</span>, <span class="comment">// 修改为你的端口</span></span><br><span class="line">        <span class="string">&#x27;worker_num&#x27;</span> =&gt; <span class="title function_ invoke__">swoole_cpu_num</span>(),</span><br><span class="line">        <span class="string">&#x27;options&#x27;</span>    =&gt; [</span><br><span class="line">            <span class="string">&#x27;package_max_length&#x27;</span> =&gt; <span class="number">10</span> * <span class="number">1024</span> * <span class="number">1024</span>, <span class="comment">// 10MB</span></span><br><span class="line">            <span class="string">&#x27;max_request&#x27;</span>        =&gt; <span class="number">3000</span>,</span><br><span class="line">        ],</span><br><span class="line">    ],</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;websocket&#x27;</span> =&gt; [</span><br><span class="line">        <span class="string">&#x27;enable&#x27;</span>        =&gt; <span class="literal">true</span>, <span class="comment">// 开启 WebSocket</span></span><br><span class="line">        <span class="string">&#x27;route&#x27;</span>         =&gt; <span class="literal">false</span>,</span><br><span class="line">        <span class="string">&#x27;handler&#x27;</span>       =&gt; \think\swoole\websocket<span class="title class_">\Handler</span>::<span class="variable language_">class</span>,</span><br><span class="line">        <span class="string">&#x27;ping_interval&#x27;</span> =&gt; <span class="number">25000</span>, <span class="comment">// 心跳间隔</span></span><br><span class="line">        <span class="string">&#x27;ping_timeout&#x27;</span>  =&gt; <span class="number">60000</span>, <span class="comment">// 超时时间</span></span><br><span class="line">        <span class="string">&#x27;room&#x27;</span> =&gt; [</span><br><span class="line">            <span class="string">&#x27;type&#x27;</span>  =&gt; <span class="string">&#x27;table&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;table&#x27;</span> =&gt; [</span><br><span class="line">                <span class="string">&#x27;room_rows&#x27;</span>   =&gt; <span class="number">8192</span>,</span><br><span class="line">                <span class="string">&#x27;room_size&#x27;</span>   =&gt; <span class="number">2048</span>,</span><br><span class="line">                <span class="string">&#x27;client_rows&#x27;</span> =&gt; <span class="number">4096</span>,</span><br><span class="line">                <span class="string">&#x27;client_size&#x27;</span> =&gt; <span class="number">2048</span>,</span><br><span class="line">            ],</span><br><span class="line">        ],</span><br><span class="line"></span><br><span class="line">        <span class="comment">// WebSocket 事件监听类</span></span><br><span class="line">        <span class="string">&#x27;listen&#x27;</span> =&gt; [</span><br><span class="line">            <span class="string">&#x27;open&#x27;</span>  =&gt; \app\webscoket<span class="title class_">\Connect</span>::<span class="variable language_">class</span>,</span><br><span class="line">            <span class="string">&#x27;event&#x27;</span> =&gt; \app\webscoket<span class="title class_">\Event</span>::<span class="variable language_">class</span>,</span><br><span class="line">            <span class="string">&#x27;close&#x27;</span> =&gt; \app\webscoket<span class="title class_">\Close</span>::<span class="variable language_">class</span>,</span><br><span class="line">        ],</span><br><span class="line"></span><br><span class="line">        <span class="string">&#x27;subscribe&#x27;</span> =&gt; [],</span><br><span class="line">    ],</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 其他服务配置（可按需启用）</span></span><br><span class="line">    <span class="string">&#x27;rpc&#x27;</span> =&gt; [</span><br><span class="line">        <span class="string">&#x27;server&#x27;</span> =&gt; [</span><br><span class="line">            <span class="string">&#x27;enable&#x27;</span>     =&gt; <span class="literal">false</span>,</span><br><span class="line">            <span class="string">&#x27;host&#x27;</span>       =&gt; <span class="string">&#x27;0.0.0.0&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;port&#x27;</span>       =&gt; <span class="number">9000</span>,</span><br><span class="line">            <span class="string">&#x27;worker_num&#x27;</span> =&gt; <span class="title function_ invoke__">swoole_cpu_num</span>(),</span><br><span class="line">            <span class="string">&#x27;services&#x27;</span>   =&gt; [],</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&#x27;client&#x27;</span> =&gt; [],</span><br><span class="line">    ],</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;queue&#x27;</span> =&gt; [</span><br><span class="line">        <span class="string">&#x27;enable&#x27;</span>  =&gt; <span class="literal">false</span>,</span><br><span class="line">        <span class="string">&#x27;workers&#x27;</span> =&gt; [],</span><br><span class="line">    ],</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;hot_update&#x27;</span> =&gt; [</span><br><span class="line">        <span class="string">&#x27;enable&#x27;</span>  =&gt; <span class="title function_ invoke__">env</span>(<span class="string">&#x27;APP_DEBUG&#x27;</span>, <span class="literal">false</span>),</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>    =&gt; [<span class="string">&#x27;*.php&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;include&#x27;</span> =&gt; [<span class="title function_ invoke__">app_path</span>()],</span><br><span class="line">        <span class="string">&#x27;exclude&#x27;</span> =&gt; [],</span><br><span class="line">    ],</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;pool&#x27;</span> =&gt; [</span><br><span class="line">        <span class="string">&#x27;db&#x27;</span> =&gt; [</span><br><span class="line">            <span class="string">&#x27;enable&#x27;</span>        =&gt; <span class="literal">true</span>,</span><br><span class="line">            <span class="string">&#x27;max_active&#x27;</span>    =&gt; <span class="number">3</span>,</span><br><span class="line">            <span class="string">&#x27;max_wait_time&#x27;</span> =&gt; <span class="number">5</span>,</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&#x27;cache&#x27;</span> =&gt; [</span><br><span class="line">            <span class="string">&#x27;enable&#x27;</span>        =&gt; <span class="literal">true</span>,</span><br><span class="line">            <span class="string">&#x27;max_active&#x27;</span>    =&gt; <span class="number">3</span>,</span><br><span class="line">            <span class="string">&#x27;max_wait_time&#x27;</span> =&gt; <span class="number">5</span>,</span><br><span class="line">        ],</span><br><span class="line">    ],</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;ipc&#x27;</span> =&gt; [</span><br><span class="line">        <span class="string">&#x27;type&#x27;</span> =&gt; <span class="string">&#x27;unix_socket&#x27;</span>,</span><br><span class="line">    ],</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;lock&#x27;</span> =&gt; [</span><br><span class="line">        <span class="string">&#x27;enable&#x27;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line">        <span class="string">&#x27;type&#x27;</span>   =&gt; <span class="string">&#x27;table&#x27;</span>,</span><br><span class="line">    ],</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;tables&#x27;</span>    =&gt; [],</span><br><span class="line">    <span class="string">&#x27;concretes&#x27;</span> =&gt; [],</span><br><span class="line">    <span class="string">&#x27;resetters&#x27;</span> =&gt; [],</span><br><span class="line">    <span class="string">&#x27;instances&#x27;</span> =&gt; [],</span><br><span class="line">    <span class="string">&#x27;services&#x27;</span>  =&gt; [],</span><br><span class="line">];</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="🧩-二、WebSocket-事件监听类"><a href="#🧩-二、WebSocket-事件监听类" class="headerlink" title="🧩 二、WebSocket 事件监听类"></a>🧩 二、WebSocket 事件监听类</h2><p>在 <code>app/webscoket/</code> 目录下新建以下三个类，分别对应连接、消息、断开三个事件。</p>
<h3 id="1-Connect-php-—-连接事件"><a href="#1-Connect-php-—-连接事件" class="headerlink" title="1. Connect.php — 连接事件"></a>1. <code>Connect.php</code> — 连接事件</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">webscoket</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">swoole</span>\<span class="title">Websocket</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Connect</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$websocket</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;websocket = <span class="title function_ invoke__">app</span>(<span class="title class_">Websocket</span>::<span class="variable language_">class</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handle</span>(<span class="params"><span class="variable">$event</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$fd</span> = <span class="variable language_">$this</span>-&gt;websocket-&gt;<span class="title function_ invoke__">getSender</span>();</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;websocket-&gt;<span class="title function_ invoke__">push</span>(<span class="title function_ invoke__">json_encode</span>([</span><br><span class="line">            <span class="string">&#x27;type&#x27;</span> =&gt; <span class="string">&#x27;xdebug&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;data&#x27;</span> =&gt; <span class="string">&quot;client <span class="subst">&#123;$fd&#125;</span> Connect&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;time&#x27;</span> =&gt; <span class="title function_ invoke__">time</span>()</span><br><span class="line">        ]));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="2-Event-php-—-消息事件"><a href="#2-Event-php-—-消息事件" class="headerlink" title="2. Event.php — 消息事件"></a>2. <code>Event.php</code> — 消息事件</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">webscoket</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">swoole</span>\<span class="title">Websocket</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Event</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$websocket</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;websocket = <span class="title function_ invoke__">app</span>(<span class="title class_">Websocket</span>::<span class="variable language_">class</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handle</span>(<span class="params"><span class="variable">$event</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$fd</span> = <span class="variable language_">$this</span>-&gt;websocket-&gt;<span class="title function_ invoke__">getSender</span>();</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;client <span class="subst">&#123;$fd&#125;</span> Event\n&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;接收到事件: &#x27;</span> . <span class="variable">$event</span>-&gt;type . <span class="string">&#x27; --- &#x27;</span> . <span class="variable">$event</span>-&gt;data . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="3-Close-php-—-断开事件"><a href="#3-Close-php-—-断开事件" class="headerlink" title="3. Close.php — 断开事件"></a>3. <code>Close.php</code> — 断开事件</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">webscoket</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">swoole</span>\<span class="title">Websocket</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Close</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$websocket</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;websocket = <span class="title function_ invoke__">app</span>(<span class="title class_">Websocket</span>::<span class="variable language_">class</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handle</span>(<span class="params"><span class="variable">$event</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$fd</span> = <span class="variable language_">$this</span>-&gt;websocket-&gt;<span class="title function_ invoke__">getSender</span>();</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;client <span class="subst">&#123;$fd&#125;</span> Close\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="🖥️-三、前端-HTML-测试页面"><a href="#🖥️-三、前端-HTML-测试页面" class="headerlink" title="🖥️ 三、前端 HTML 测试页面"></a>🖥️ 三、前端 HTML 测试页面</h2><p>新建一个 HTML 文件用于调试 WebSocket 通信：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>websocket<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>websocket功能<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;msg&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;send()&quot;</span>&gt;</span>发送<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// wss://echo.websocket.org 公共测试服务器</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> ws = <span class="keyword">new</span> <span class="title class_">WebSocket</span>(<span class="string">&quot;ws://你的ip地址:9501&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">    ws.<span class="property">onopen</span> = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;连接成功&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> sendObj = &#123;&#125;;</span></span><br><span class="line"><span class="language-javascript">        sendObj.<span class="property">type</span> = <span class="string">&#x27;connect&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        sendObj.<span class="property">data</span> = <span class="string">&#x27;connect success&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;msg&#x27;</span>,<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(sendObj));</span></span><br><span class="line"><span class="language-javascript">        ws.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(sendObj));</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    ws.<span class="property">onclose</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;连接失败&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">    ws.<span class="property">onmessage</span> = <span class="keyword">function</span> (<span class="params">evt</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;数据已接收&quot;</span>,evt);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">send</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;运行到这里了&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> msg = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;msg&#x27;</span>).<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> sendObj = &#123;&#125;;</span></span><br><span class="line"><span class="language-javascript">        sendObj.<span class="property">type</span> = <span class="string">&#x27;mtest&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        sendObj.<span class="property">data</span> = msg;</span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;msg&#x27;</span>,<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(sendObj));</span></span><br><span class="line"><span class="language-javascript">        ws.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(sendObj));</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="🔗-参考资料"><a href="#🔗-参考资料" class="headerlink" title="🔗 参考资料"></a>🔗 参考资料</h2><ul>
<li><a href="https://blog.csdn.net/quweiie/article/details/146481115">ThinkPHP + Swoole WebSocket 配置教程（CSDN）</a></li>
<li><a href="https://wiki.swoole.com/zh-cn/#/websocket_server?id=open_websocket_ping_frame">Swoole 官方文档：WebSocket</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/142404854">知乎：ThinkPHP + Swoole WebSocket 使用方法</a></li>
</ul>
<hr>
<h2 id="✅-总结"><a href="#✅-总结" class="headerlink" title="✅ 总结"></a>✅ 总结</h2><p>通过本文，你可以快速搭建一个基于 Swoole 的 WebSocket 服务，完成连接、消息接收、断开监听等基础功能。结合 ThinkPHP 的事件机制，让 WebSocket 集成更清晰、更易扩展。</p>
<p>如果你想继续深入，可以加入用户身份绑定、Redis 聊天室中转、消息广播等高级功能。</p>
]]></content>
  </entry>
</search>
